version: '3.8'

services:
  fpm:
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: fpm-dev
    container_name: fpm
    restart: always
    tty: true
    volumes:
        - .:/var/www
    networks:
      - app-network

  worker:
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: fpm-dev
    container_name: worker
    command: php artisan horizon
    restart: always
    tty: true
    volumes:
      - .:/var/www
    networks:
      - app-network

  schedule:
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: fpm-dev
    container_name: schedule
    command: php artisan schedule:work
    restart: always
    tty: true
    volumes:
      - .:/var/www
    networks:
      - app-network

  web:
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: nginx
    container_name: web
    restart: always
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - .:/var/www
    networks:
      - app-network

  websockets:
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: fpm-dev
    container_name: websockets
    command: php artisan websockets:serve
    restart: always
    tty: true
    ports:
      - "6001:6001"
    volumes:
      - .:/var/www
    networks:
      - app-network

  node:
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: node
    container_name: node
    command: yarn dev
    restart: always
    tty: true
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    ports:
      - "5173:5173"
    volumes:
      # the node container only needs access to these resources
      # this is also only in the event you are updating these resources
      - .env:/var/www/.env
      - ./public:/var/www/public
      - ./vite.config.js:/var/www/vite.config.js
      - ./resources:/var/www/resources
      - ./package.json:/var/www/package.json
      - node_modules:/var/www/node_modules
    networks:
      - app-network

  pgsql:
    image: postgres:14.4-alpine
    container_name: pgsql
    restart: always
    tty: true
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: localuser
      POSTGRES_PASSWORD: supersecretpassword
      POSTGRES_DB: laravel
    volumes:
      - dbdata:/var/lib/postgresql/data
    networks:
      - app-network

  redis:
    image: redis:7.0.4
    container_name: redis
    restart: always
    tty: true
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - cache:/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
    driver: local
  cache:
    driver: local
  node_modules:
    driver: local
